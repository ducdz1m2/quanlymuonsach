const jwt = require("jsonwebtoken");
const ApiError = require("../api-error");
require("dotenv").config();
const JWT_SECRET = process.env.JWT_SECRET;

exports.generateToken = (payload) => {
  return jwt.sign(payload, JWT_SECRET, { expiresIn: "7d" });
};
exports.verifyToken = (req, res, next) => {
  const authHeader = req.headers.authorization;
  console.log("üß© Header nh·∫≠n ƒë∆∞·ª£c:", authHeader);

  if (!authHeader || !authHeader.startsWith("Bearer ")) {
    return next(new ApiError(403, "Thi·∫øu token truy c·∫≠p!"));
  }

  const token = authHeader.split(" ")[1];
  try {
    const decoded = jwt.verify(token, JWT_SECRET);
    console.log("‚úÖ Token decode:", decoded);
    req.user = decoded;
    next();
  } catch (err) {
    console.log("‚ùå Token l·ªói:", err.message);
    return next(new ApiError(403, "Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!"));
  }
};

exports.authorize = (roles = []) => {
  return (req, res, next) => {
    if (!roles.includes(req.user.role)) {
      return next(new ApiError(403, "Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p!"));
    }
    next();
  };
};
